[project]
name = "mcp-agentapi"
version = "1.0.0"
description = "MCP server for interacting with AI agents through the Agent API"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "MCP Server Team", email = "your-email@example.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "httpx>=0.24.0",
    "mcp[cli]>=1.3.0",
    "uvicorn>=0.23.0",
    "starlette>=0.31.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.1",
    "types-requests>=2.31.0.2",
]

[project.scripts]
mcp-agentapi = "mcp_agentapi.cli:cli_main"

[project.urls]
"Homepage" = "https://github.com/lord-dubious/mcp-agentapi"
"Bug Tracker" = "https://github.com/lord-dubious/mcp-agentapi/issues"
"Documentation" = "https://github.com/lord-dubious/mcp-agentapi#readme"
"Source Code" = "https://github.com/lord-dubious/mcp-agentapi"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["mcp_agentapi"]
include-package-data = true

[tool.setuptools.package-data]
"mcp_agentapi" = ["py.typed", "*.json", "*.md"]
"mcp_agentapi.bin" = ["*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
]
